name: "Release : Timely Executables"

on:
  # Triggered manually
  workflow_dispatch:
    inputs:
      tag:
        description: "Timely version"
        required: true
  # Triggered by release-nightly-dev.yml / release-pr.yml
  workflow_call:
    inputs:
      tag:
        description: "Timely version"
        required: true
        type: string
    secrets:
      NC_GITHUB_TOKEN:
        required: true
jobs:

  gen-mac-arm64-binaries:
    runs-on: macos-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.NC_GITHUB_TOKEN }}
          repository: 'nocodb/nocodb-timely'

      - uses: actions/setup-node@v3
        with:
          node-version: 16


      - name: Install dependencies and build executables
        env:
          TAG: ${{ github.event.inputs.tag || inputs.tag }}
        run: |
          python -V
          npm i -E nocodb-daily@$TAG
          cat ./package.json


          # build binaries
          cd ./node_modules/better-sqlite3;
          rm -r ./build
          npx --yes prebuild --arch=arm64

      - uses: actions/upload-artifact@master
        with:
          name: ${{ github.event.inputs.tag || inputs.tag }}-bin
          path: ./node_modules/better-sqlite3/build/Release
          retention-days: 1


  build-executables:
    runs-on: ubuntu-latest
    needs: gen-mac-arm64-binaries
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.NC_GITHUB_TOKEN }}
          repository: 'nocodb/nocodb-timely'
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache pkg modules
        id: cache-pkg
        uses: actions/cache@v3
        env:
          cache-name: cache-pkg
        with:
          # pkg cache files are stored in `~/.pkg-cache`
          path: ~/.pkg-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install QEMU and ldid
        run: |
          sudo apt update
          # Install qemu
          sudo apt install qemu binfmt-support qemu-user-static
          # install ldid
          git clone https://github.com/daeken/ldid.git
          cd ./ldid
          ./make.sh
          sudo cp ./ldid /usr/local/bin


      - uses: actions/download-artifact@master
        with:
          name: ${{ github.event.inputs.tag || inputs.tag }}-bin
          path: ./Release

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Update nocodb-timely
        env:
          TAG: ${{ github.event.inputs.tag || inputs.tag }}
        run: |
          npm i -E nocodb-daily@$TAG

          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

          git commit package.json -m "Update to $TAG"
          git tag $TAG
          git push --tags


      - name : Install dependencies and build executables
        run: |
          # install npm dependendencies
          npm i

          # clean up code to optimize size
          npx --yes modclean --patterns="default:*" --ignore="nc-lib-gui-daily/**,dayjs/**,express-status-monitor/**,better-sqlite3/**" --run

          mkdir ./dist
          mkdir ./mac-dist


          mkdir -p ./node_modules/better-sqlite3/build/Release/
          rsync -rvzhP ./Release/ ./node_modules/better-sqlite3/build/Release/
          npx --yes pkg . --compress GZip -t node16-macos-arm64 -o Noco-macos-arm64
          mv ./Noco-macos-arm64 ./mac-dist/

          cd ./node_modules/better-sqlite3;
          rm -r ./build
          npx --yes prebuild-install --platform=darwin --arch=x64 || npx --yes prebuild --platform=darwin --arch=x64
          cd ../..;
          npx --yes pkg . --compress GZip -t node16-macos-x64 -o Noco-macos-x64
          mv ./Noco-macos-x64 ./mac-dist/

          cd ./node_modules/better-sqlite3;
          rm -r ./build
          npx --yes prebuild-install --platform=linux --arch=x64 || npx --yes prebuild --platform=linux --arch=x64
          cd ../..;
          npx --yes pkg . --compress GZip -t node16-linux-x64 -o Noco-linux-x64
          mv ./Noco-linux-x64 ./dist/

          cd ./node_modules/better-sqlite3;
          rm -r ./build
          npx --yes prebuild-install --platform=linux --arch=arm64 || npx --yes prebuild --platform=linux --arch=arm64
          cd ../..;
          npx --yes pkg . --compress GZip -t node16-linux-arm64 -o Noco-linux-arm64
          mv ./Noco-linux-arm64 ./dist/


          cd ./node_modules/better-sqlite3;
          rm -r ./build
          npx --yes prebuild-install --platform=win32 --arch=x64 || npx --yes prebuild --platform=win32 --arch=x64
          cd ../..;
          npx --yes pkg . --compress GZip -t node16-win-x64 -o Noco-win-x64.exe
          mv ./Noco-win-x64.exe ./dist/

          cd ./node_modules/better-sqlite3;
          rm -r ./build
          npx --yes prebuild-install --platform=win32 --arch=arm64 || npx --yes  prebuild --platform=win32 --arch=arm64
          cd ../..;
          npx --yes pkg . --compress GZip -t node16-win-arm64 -o Noco-win-arm64.exe
          mv ./Noco-win-arm64.exe ./dist/

      - name: Upload executables(except mac executables) to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.NC_GITHUB_TOKEN }}
          file: dist/**
          tag: ${{ github.event.inputs.tag || inputs.tag }}
          overwrite: true
          file_glob: true
          repo_name: nocodb/nocodb-timely

      - uses: actions/upload-artifact@master
        with:
          name: ${{ github.event.inputs.tag || inputs.tag }}
          path: mac-dist
          retention-days: 1

  sign-mac-executables:
    runs-on: macos-latest
    needs: build-executables
    steps:

      - uses: actions/download-artifact@master
        with:
          name: ${{ github.event.inputs.tag || inputs.tag }}
          path: mac-dist

      - name: Sign macOS executables
        run: |
          /usr/bin/codesign --force -s - ./mac-dist/Noco-macos-arm64 -v
          /usr/bin/codesign --force -s - ./mac-dist/Noco-macos-x64 -v

      - uses: actions/upload-artifact@master
        with:
          name: ${{ github.event.inputs.tag || inputs.tag }}
          path: mac-dist
          retention-days: 1


  publish-mac-executables:
    needs: sign-mac-executables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: ${{ github.event.inputs.tag || inputs.tag }}
          path: mac-dist

      - name: Upload mac executables to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.NC_GITHUB_TOKEN }}
          file: mac-dist/**
          tag: ${{ github.event.inputs.tag || inputs.tag }}
          overwrite: true
          file_glob: true
          repo_name: nocodb/nocodb-timely






